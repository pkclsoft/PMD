DEFINITION MODULE LinkMap;

FROM Lists IMPORT aList;

CONST
  nameLength  = 128;

TYPE
  aName       = ARRAY [0..nameLength-1] OF CHAR;

  aSymbol =
    RECORD
      name:     aName;
      offset:   LONGCARD;
      length:   LONGCARD;
    END;
  pSymbol   =   POINTER TO aSymbol;

  aSegment =
    RECORD
      number:   CARDINAL;
      symbols:  aList;  (* of aSymbol *)
    END;
  pSegment    = POINTER TO aSegment;

  aMap =
    RECORD
      segments: aList; (* of aSegment *)
    END;
  pMap        = POINTER TO aMap;

VAR
  debugModeOn:  BOOLEAN;

PROCEDURE PurgeMap(VAR map: pMap);
(*
  OPERATION:
    Disposes of any memory used by the specified map. 'map' is returned as NIL.
*)

PROCEDURE ReadByteworksMap(    filename:  ARRAY OF CHAR;
                           VAR map:       pMap);
(*
  OPERATION:
    Reads a link map generated by the byteworks linker, and generates a memory
    resident version of the map.
*)

PROCEDURE WriteMapToFile(map:       pMap;
                         filename:  ARRAY OF CHAR);
(*
  OPERATION:
    Write the specified map to a disk file in a format that is easy for a 
    program to read, as opposed to the text file produced by the linker.
*)

PROCEDURE ReadMapFromFile(VAR map:       pMap;
                              filename:  ARRAY OF CHAR);
(*
  OPERATION:
    Read the specified map file into memory.
*)

PROCEDURE FindSegment(    inMap:      pMap;
                          forSegment: CARDINAL;
                      VAR segment:    pSegment);
(*
  OPERATION:
    Searches the supplied link map for a segment that corresponds to 
    the provided segment number.  Returns NIL if not found.
*)

PROCEDURE FindSymbol(    inMap:     pMap;
                         forOffset: LONGCARD;
                         inSegment: CARDINAL;
                     VAR symbol:    pSymbol);
(*
  OPERATION:
    Searches the supplied link map for a symbol that corresponds to 
    the provided offset in a segment.  Returns NIL if not found.
*)

END LinkMap.

